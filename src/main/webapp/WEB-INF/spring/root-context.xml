<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- DAO, Impl ... 객체 생성 -->
	<context:component-scan base-package="com.ezen.biz"/>
	<!-- DataSource의 정보를 설정할 외부 파일을 정의 -->
	<context:property-placeholder location="classpath:oraDB.properties"/>
	<!-- HikariCP 사용 bean 등록 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="${ora.driver}"/>
		<property name="jdbcUrl"         value="${ora.url}"/>
		<property name="username"        value="${ora.user}"/>
		<property name="password"        value="${ora.pwd}"/>
	</bean>
	<!-- HikariCP configuration -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" 
		destroy-method="close">
		<constructor-arg ref="hikariConfig"/>
		<property name="idleTimeout" value="300"/>
		<property name="maxLifetime" value="300"/>
	</bean>
	<!-- Mybatis(SqlSession) 객체 생성 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:sql-map-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- Mybatis이용해서 편리하게 CRUD 작업을 할 수 있는 Templet 사용 bean등록 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactoryBean"/>
	</bean>	
	
	<!--   AOP 관련 정의   aop 네임스패이스 추가 -->
	<!--   AOP 관련 Annotation scan 위한 설정 -->
	<aop:aspectj-autoproxy/>
	<!-- 트랜잭션 관련 Advice 는 스프링이 제공해 주는 것을 사용 
		설정 : tx 태그사용 -> tx 네임스패이스를 추가
		DataSourceTransactionManager 객체 생성
	-->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 어드바이스 정의 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*"/>
			<tx:method name="select*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- tx 관련 AOP 설정 -->
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.ezen.biz..*Impl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>		
</beans>
